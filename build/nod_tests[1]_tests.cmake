add_test( NODTests.BasicCases [==[/workspaces/C++/build/nod_tests]==] [==[--gtest_filter=NODTests.BasicCases]==] --gtest_also_run_disabled_tests)
set_tests_properties( NODTests.BasicCases PROPERTIES WORKING_DIRECTORY [==[/workspaces/C++/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NODTests.EqualNumbers [==[/workspaces/C++/build/nod_tests]==] [==[--gtest_filter=NODTests.EqualNumbers]==] --gtest_also_run_disabled_tests)
set_tests_properties( NODTests.EqualNumbers PROPERTIES WORKING_DIRECTORY [==[/workspaces/C++/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NODTests.OneIsMultipleOfAnother [==[/workspaces/C++/build/nod_tests]==] [==[--gtest_filter=NODTests.OneIsMultipleOfAnother]==] --gtest_also_run_disabled_tests)
set_tests_properties( NODTests.OneIsMultipleOfAnother PROPERTIES WORKING_DIRECTORY [==[/workspaces/C++/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NODTests.PrimeNumbers [==[/workspaces/C++/build/nod_tests]==] [==[--gtest_filter=NODTests.PrimeNumbers]==] --gtest_also_run_disabled_tests)
set_tests_properties( NODTests.PrimeNumbers PROPERTIES WORKING_DIRECTORY [==[/workspaces/C++/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NODTests.LargeNumbers [==[/workspaces/C++/build/nod_tests]==] [==[--gtest_filter=NODTests.LargeNumbers]==] --gtest_also_run_disabled_tests)
set_tests_properties( NODTests.LargeNumbers PROPERTIES WORKING_DIRECTORY [==[/workspaces/C++/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NODTests.WithZero [==[/workspaces/C++/build/nod_tests]==] [==[--gtest_filter=NODTests.WithZero]==] --gtest_also_run_disabled_tests)
set_tests_properties( NODTests.WithZero PROPERTIES WORKING_DIRECTORY [==[/workspaces/C++/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
add_test( NODTests.NegativeNumbers [==[/workspaces/C++/build/nod_tests]==] [==[--gtest_filter=NODTests.NegativeNumbers]==] --gtest_also_run_disabled_tests)
set_tests_properties( NODTests.NegativeNumbers PROPERTIES WORKING_DIRECTORY [==[/workspaces/C++/build]==] SKIP_REGULAR_EXPRESSION [==[\[  SKIPPED \]]==])
set( nod_tests_TESTS NODTests.BasicCases NODTests.EqualNumbers NODTests.OneIsMultipleOfAnother NODTests.PrimeNumbers NODTests.LargeNumbers NODTests.WithZero NODTests.NegativeNumbers)
